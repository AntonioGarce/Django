# Generated by Django 3.2.16 on 2023-08-10 18:31

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_admin', models.BooleanField(default=False)),
                ('img', models.ImageField(blank=True, null=True, upload_to='users_img/', verbose_name='Аватарка')),
                ('login', models.CharField(max_length=100, verbose_name='Имя пользователя')),
                ('username', models.CharField(max_length=100, unique=True, verbose_name='Логин')),
                ('password', models.CharField(max_length=100, verbose_name='Пароль')),
                ('ref_code', models.CharField(max_length=100, verbose_name='Реф. код')),
                ('secure_code', models.CharField(blank=True, max_length=100, null=True, verbose_name='Код безопасности')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='Город')),
                ('btc_amount', models.FloatField(blank=True, default=0.0, null=True, verbose_name='Сумма на счету')),
                ('agreed', models.BooleanField(null=True, verbose_name='Согласие с условиями')),
                ('captcha', models.CharField(blank=True, max_length=50, null=True, verbose_name='Каптча')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tick_order', models.CharField(max_length=100, verbose_name='Номер тикета')),
                ('thema', models.CharField(max_length=100, verbose_name='Тема')),
                ('status', models.BooleanField(verbose_name='Статус')),
                ('data', models.DateTimeField(auto_now_add=True, verbose_name='%Y-%m-%d %H:%M')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Тикеты пользователя',
                'verbose_name_plural': 'Тикеты пользователя',
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_order', models.CharField(blank=True, max_length=100, null=True, verbose_name='Номер заказа')),
                ('item', models.CharField(max_length=100, verbose_name='Единица')),
                ('item_img', models.ImageField(upload_to='orders_img/', verbose_name='Изображение единицы')),
                ('amount', models.CharField(max_length=100, verbose_name='Количество')),
                ('city', models.CharField(max_length=100, verbose_name='Город')),
                ('location', models.CharField(max_length=100, verbose_name='Локация')),
                ('price', models.IntegerField(verbose_name='Цена')),
                ('store', models.CharField(max_length=50, verbose_name='Магазин')),
                ('time', models.DateTimeField(auto_now_add=True, verbose_name='%Y-%m-%d %H:%M')),
                ('actions', models.BooleanField(blank=True, null=True, verbose_name='Действия')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Заказы пользователя',
                'verbose_name_plural': 'Заказы пользователя',
            },
        ),
        migrations.CreateModel(
            name='Favourite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.CharField(max_length=250, verbose_name='Товар')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Любимые товары пользователя',
                'verbose_name_plural': 'Любимые товары пользователя',
            },
        ),
        migrations.CreateModel(
            name='Dispute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dispute_num', models.CharField(max_length=100, verbose_name='Номер диспута')),
                ('store', models.CharField(max_length=100, verbose_name='Магазин')),
                ('item', models.CharField(max_length=250, verbose_name='Товар')),
                ('data', models.DateTimeField(auto_now_add=True, verbose_name='%Y-%m-%d %H:%M')),
                ('answer', models.BooleanField(default=False, verbose_name='Ответ')),
                ('status', models.BooleanField(default=False, verbose_name='Статус')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Диспуты пользователя',
                'verbose_name_plural': 'Диспуты пользователя',
            },
        ),
        migrations.CreateModel(
            name='Dialogs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Почта пользователя')),
                ('thema', models.CharField(blank=True, max_length=200, null=True, verbose_name='Тема')),
                ('store_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Название магазина')),
                ('action', models.CharField(blank=True, max_length=100, null=True, verbose_name='Действия')),
                ('text', models.TextField(blank=True, null=True, verbose_name='Текст')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Диалоги пользователя',
                'verbose_name_plural': 'Диалоги пользователя',
            },
        ),
    ]
